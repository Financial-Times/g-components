{"version":3,"file":"static/preview.5c901a05962d2e247f0e.bundle.js","sources":["webpack:///./bower_components/o-comment-ui/src/javascripts/Widget.js"],"sourcesContent":["const oCommentUtilities = require('o-comment-utilities');\nconst WidgetUi = require('./WidgetUi.js');\n\n/**\n * Widget is responsible to coordinate getting initialization data, loading resources and initializing the Ui.\n * While this class implements some of the basic functionality (handling errors, loading timeout),\n * it should be extended by providing an implementation for getting the initialization data and loading the resources.\n *\n * #### Configuration\n * ###### Mandatory fields:\n *\n * - articleId: ID of the article, any string\n * - url: canonical URL of the page\n * - title: Title of the page\n *\n * ###### Optional fields:\n *\n *  - timeout: Period of time after a timeout is triggered. Default is 15000 ms (15 sec). Its value should be given in milliseconds (ms).\n *\n * @param {String|Object} rootEl Selector or DOM element where the widget should be loaded.\n * @param {Object} config Configuration object, as described in the class description.\n * @return {undefined}\n */\nfunction Widget (rootEl, config) {\n\tlet widgetEl;\n\tlet self;\n\n\tself = this;\n\n\ttry {\n\t\tif (!rootEl) {\n\t\t\trootEl = document.body;\n\t\t} else if (!(rootEl instanceof HTMLElement)) { // could throw exception in IE\n\t\t\trootEl = document.querySelector(rootEl);\n\t\t}\n\t} catch (e) {\n\t\tlet el;\n\t\tif (typeof rootEl === 'string') {\n\t\t\tel = document.querySelector(rootEl);\n\t\t}\n\n\t\tif (el) {\n\t\t\trootEl = el;\n\t\t} else {\n\t\t\trootEl = document.body;\n\t\t}\n\t}\n\n\trootEl.setAttribute('data-'+ self.classNamespace +'-js', '');\n\n\twidgetEl = rootEl;\n\n\tif (!widgetEl.id) {\n\t\twidgetEl.id = self.eventNamespace + '-' + oCommentUtilities.generateId();\n\t}\n\tconfig.elId = widgetEl.id;\n\n\n\t/**\n\t * Validation of the initial configuration object.\n\t */\n\tif (!config) {\n\t\treturn;\n\t}\n\n\tif (!config.articleId) {\n\t\tif (!config.articleid) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tconfig.articleId = config.articleid;\n\t\t}\n\t}\n\n\tif (!config.url) {\n\t\treturn;\n\t}\n\n\tif (!config.title) {\n\t\treturn;\n\t}\n\n\n\n\tconfig.timeout = config.timeout || 15;\n\n\n\tthis.config = config;\n\n\n\tthis.ui = new WidgetUi(widgetEl);\n\n\t/**\n\t * Returns the widget container DOM element\n\t * @return {DOMObject} Widget's DOM element\n\t */\n\tthis.getWidgetEl = function () {\n\t\treturn widgetEl;\n\t};\n\n\t/**\n\t * Attach new event handlers.\n\t * @type {function}\n\t * @param {string} eventName Required. Name of the event to which to attach the handler.\n\t * @param {function} eventHandler Required. Handler Function which will be called when the event is triggered.\n\t * @return {undefined}\n\t */\n\tthis.on = function (eventName, eventHandler) {\n\t\twidgetEl.addEventListener(self.eventNamespace + '.' + eventName, eventHandler);\n\t};\n\n\t/**\n\t * Removes the event handler(s).\n\t * @type {function}\n\t * @param {string} eventName Required. Specifies the event from which all handlers should be removed.\n\t *  If omitted, all event handlers are removed from all events.\n\t * @param {function} eventHandler Required. The event name should be specified as well if this is specified.\n\t *  Specifies the handler which should be removed from the event specified.\n\t * @return {undefined}\n\t */\n\tthis.off = function (eventName, eventHandler) {\n\t\twidgetEl.removeEventListener(self.eventNamespace + '.' + eventName, eventHandler);\n\t};\n\n\t/**\n\t * Triggers an event.\n\t * @type {function}\n\t * @param {string} eventName Required. Name of the event which will be triggered.\n\t * @param {object} data Optional. Data to be passed to the handler.\n\t * @return {undefined}\n\t */\n\tthis.trigger = function (eventName, data) {\n\t\tconst payload = {\n\t\t\tdata: data,\n\t\t\tinstance: self,\n\t\t\tid: config.elId\n\t\t};\n\n\t\twidgetEl.dispatchEvent(new CustomEvent(self.eventNamespace + '.' + eventName, {\n\t\t\tdetail: payload,\n\t\t\tbubbles: true\n\t\t}));\n\t};\n\n\t/**\n\t * ! 'this' could not have the value of the instance.\n\t * To be sure you use the correct instance value, you should\n\t * save it in the constructor in a variable (var self = this)\n\t * and use that variable.\n\t * @param {Function} callback function (err, data), where data is the init data\n\t * @return {undefined}\n\t */\n\tthis.loadInitData = function (callback) {\n\t\tcallback(new Error(\"Not implemented\"));\n\t};\n\n\n\tthis.onTimeout = function () {\n\t\tself.ui.clearContainer();\n\t\tself.ui.addNotAvailableMessage();\n\t};\n\n\tthis.onError = function () {\n\t\tself.ui.clearContainer();\n\t\tself.ui.addNotAvailableMessage();\n\t};\n\n\tthis.destroy = function () {\n\t\tself.config = null;\n\n\t\tself.ui.destroy();\n\t\tself.ui = null;\n\n\t\twidgetEl = null;\n\n\t\tself = null;\n\t};\n}\n\nWidget.prototype.initCalled = false;\n\nWidget.prototype.init = function () {\n\tconst self = this;\n\n\tif (!this.config) {\n\t\treturn;\n\t}\n\n\tif (!this.initCalled) {\n\t\tthis.initCalled = true;\n\n\t\tlet timeout;\n\t\tif (this.config.timeout > 0) {\n\t\t\ttimeout = setTimeout(function () {\n\t\t\t\tself.trigger('widget.timeout');\n\n\t\t\t\tself.onTimeout();\n\t\t\t}, this.config.timeout * 1000);\n\t\t}\n\n\t\tself.loadInitData(function (err, data) {\n\t\t\tif (err) {\n\t\t\t\tself.trigger('error.init', err.error);\n\t\t\t\tself.trigger('error.widget', err.error);\n\n\t\t\t\tself.onError(err);\n\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tself.trigger('data.init', data);\n\n\t\t\t\tself.render(data, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tself.trigger('error.widget', err);\n\n\t\t\t\t\t\tself.onError(err);\n\n\t\t\t\t\t\tclearTimeout(timeout);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n};\nWidget.prototype.eventNamespace = 'oCommentUi';\nWidget.prototype.classNamespace = 'o-comment-ui';\n\nWidget.__extend = function(child, eventNamespace, classNamespace) {\n\tif (typeof Object.create === 'function') {\n\t\tchild.prototype = Object.create(Widget.prototype);\n\t} else {\n\t\tconst Tmp = function () {};\n\t\tTmp.prototype = Widget.prototype;\n\t\tchild.prototype = new Tmp();\n\t\tchild.prototype.constructor = child;\n\t}\n\n\tif (eventNamespace) {\n\t\tchild.prototype.eventNamespace = eventNamespace;\n\t}\n\n\tif (classNamespace) {\n\t\tchild.prototype.classNamespace = classNamespace;\n\t}\n};\n\n/**\n * Export of Widget.\n * @type {Function}\n */\nmodule.exports = Widget;\n"],"mappings":"AAAA","sourceRoot":""}